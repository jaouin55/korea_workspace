<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!--  
		1) SimpleUrlHandlerMapping 
		2) BeanNameUrlHandlerMapping
		3) DefaultAnnotationHandlerMapping (상위버전으로 갈수록 이 방식이 주로 사용됨)
		    특히, 개발자가 HandlerMapping을 지정하지 않으면, 기본이 DefaultAnnotationHandlerMapping
		    이다!!
		    특징)  설정파일을 간소화시키기 위해 주로 jdk5부터 사용 가능한 @어노테이션을 이용함
		"스프링 설정 파일의 간소화"를 목표로 하기 때문..  
	    스프링 부트!!!(설정할것이 별로 없슴)
	--> 
 	
	<bean id="handlerMapping" 
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	
	<!-- @어노테이션이 붙은 클래스를 모두 검색해서 , 스프링에서 인스턴스를 자동으로 올리자!! -->
	<context:component-scan base-package="com.study.springfinal.*">
	</context:component-scan>
	
	<!-- 파일업로드 처리 빈 등록 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
				
	<!-- ViewResolver 등록 -->
	<bean id="viewResolver" 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/"
		p:suffix=".jsp"/>					
</beans>


